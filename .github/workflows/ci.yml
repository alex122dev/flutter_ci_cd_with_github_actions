name: CI
on: 
  pull_request:
    branches: [ main ]

jobs:
  # Run_flutter_test_and_analyze:
  #   name: Run flutter test and analyze
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v3

  #   - name: Set up Flutter
  #     uses: subosito/flutter-action@v2
  #     with:
  #       channel: 'stable'
  #       # flutter-version: ${{ env.FLUTTER_VERSION }} # you can also specify exact version of flutter

  #   - name: Get pub dependencies
  #     run: flutter pub get

  #   - name: Flutter analyze
  #     run: flutter analyze

  #   - name: Flutter test
  #     run: flutter test



  build_ios:
    name: Build Flutter (iOS)
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build IOS App
        # run: flutter build ios --release --no-codesign
        # run: flutter build ipa --export-options-plist=ExportOptions.plist
        run: flutter build ipa

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: build
          name: ios-build-files

  save_ios_build:
    needs: build_ios
    runs-on: ubuntu-latest
    steps: 
      - name: Get build project
        uses: actions/download-artifact@v3
        with:
          name: ios-build-files


  # build_android:
  #   name: Build Flutter (Android)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Set up Flutter
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'stable'
  #     - name: Build Android App
  #       run: flutter build apk

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         path: build/app/outputs/flutter-apk/app-release.apk
  #         name: android-build-files
    
  # save_android_build:
  #   needs: build_android
  #   runs-on: ubuntu-latest
  #   steps: 
  #     - name: Get build project
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: android-build-files

  # slack:
  #   name: Send message to slack
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Notification Slack
  #       uses: rtCamp/action-slack-notify@v2
  #       env:
  #         SLACK_CHANNEL: test
  #         SLACK_TITLE: Post Title
  #         SLACK_USERNAME: BotCI
  #         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
  #         SLACK_MESSAGE: "This is your custom message."

  # slack_second_var:
  #   name: Send message to slack
  #   # needs: [build_android, save_android_build, build_ios, save_ios_build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Send custom JSON data to Slack workflow
  #       id: slack
  #       uses: slackapi/slack-github-action@v1.23.0
  #       with:
  #         payload: |
  #           {
  #             "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
  #           }
  #       env:
  #         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  #         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK


      # SLACK_WEBHOOK_URL: 'https://hooks.slack.com/services/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'